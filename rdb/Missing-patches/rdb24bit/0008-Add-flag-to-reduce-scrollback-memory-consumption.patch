From 512ed1518808fceede2afcc596c25cde7d6f4faf Mon Sep 17 00:00:00 2001
From: Robert de Bath <rdebath@tvisiontech.co.uk>
Date: Sun, 20 Dec 2015 20:29:06 +0000
Subject: [PATCH 08/71] Add flag to reduce scrollback memory consumption

when there are no combining characters.
---
 putty.h    |  1 +
 terminal.c | 22 ++++++++++++++++++----
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/putty.h b/putty.h
index e622e80..de831c5 100644
--- a/putty.h
+++ b/putty.h
@@ -72,6 +72,7 @@ typedef struct terminal_tag Terminal;
 #define LATTR_TOP    0x00000002UL
 #define LATTR_BOT    0x00000003UL
 #define LATTR_MODE   0x00000003UL
+#define LATTR_HASCC  0x00000004UL
 #define LATTR_HASTC  0x00000008UL
 #define LATTR_WRAPPED 0x00000010UL     /* this line wraps to next */
 #define LATTR_WRAPPED2 0x00000020UL    /* with WRAPPED: CJK wide character
diff --git a/terminal.c b/terminal.c
index d938be0..66552ce 100644
--- a/terminal.c
+++ b/terminal.c
@@ -673,7 +673,7 @@ static unsigned char *compressline(termline *ldata)
 {
     struct buf buffer = { NULL, 0, 0 }, *b = &buffer;
 #if !defined(COMBI_COLOUR) && !defined(THIN_TC24)
-    int has_tc = 0;
+    int has_tc = 0, has_cc = 0;
     {
 	int i, c = ldata->cols;
 	for(i=0; i<c; i++) {
@@ -682,6 +682,12 @@ static unsigned char *compressline(termline *ldata)
 		break;
 	    }
 	}
+	for(i=0; i<c; i++) {
+	    if (ldata->chars[i].cc_next) {
+		has_cc = 1;
+		break;
+	    }
+	}
     }
 #endif
 
@@ -704,7 +710,7 @@ static unsigned char *compressline(termline *ldata)
      */
     {
 #if !defined(COMBI_COLOUR) && !defined(THIN_TC24)
-	int n = ldata->lattr | (has_tc?LATTR_HASTC:0);
+	int n = ldata->lattr | (has_tc?LATTR_HASTC:0) | (has_cc?LATTR_HASCC:0);
 #else
 	int n = ldata->lattr;
 #endif
@@ -730,10 +736,13 @@ static unsigned char *compressline(termline *ldata)
      */
     makerle(b, ldata, makeliteral_chr);
     makerle(b, ldata, makeliteral_attr);
-    makerle(b, ldata, makeliteral_cc);
 #if !defined(COMBI_COLOUR) && !defined(THIN_TC24)
+    if (has_cc)
+	makerle(b, ldata, makeliteral_cc);
     if (has_tc)
 	makerle(b, ldata, makeliteral_t416);
+#else
+    makerle(b, ldata, makeliteral_cc);
 #endif
 
     /*
@@ -985,12 +994,17 @@ static termline *decompressline(unsigned char *data, int *bytes_used)
      */
     readrle(b, ldata, readliteral_chr);
     readrle(b, ldata, readliteral_attr);
-    readrle(b, ldata, readliteral_cc);
 #if !defined(COMBI_COLOUR) && !defined(THIN_TC24)
+    if (ldata->lattr & LATTR_HASCC) {
+	ldata->lattr &= ~LATTR_HASCC;
+	readrle(b, ldata, readliteral_cc);
+    }
     if (ldata->lattr & LATTR_HASTC) {
 	ldata->lattr &= ~LATTR_HASTC;
 	readrle(b, ldata, readliteral_t416);
     }
+#else
+    readrle(b, ldata, readliteral_cc);
 #endif
 
     /* Return the number of bytes read, for diagnostic purposes. */
-- 
2.1.4

